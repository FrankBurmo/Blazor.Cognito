//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Docs.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Docs.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to @inject Blazor.Auth0.IAuthenticationService authService
        ///@inject Blazor.Auth0.Models.ClientOptions clientOptions
        ///
        ///&lt;CascadingAuthenticationState&gt;
        ///
        ///    &lt;AuthorizeView&gt;
        ///
        ///        &lt;Authorized&gt;
        ///            &lt;Shell&gt;&lt;/Shell&gt;
        ///        &lt;/Authorized&gt;
        ///
        ///        &lt;NotAuthorized&gt;
        ///            @if (authService.SessionState == SessionStates.Undefined || clientOptions.RequireAuthenticatedUser)
        ///            {
        ///                &lt;p&gt;Determining session state, please wait...&lt;/p&gt;
        ///            }
        ///            else
        ///            [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string app_razor {
            get {
                return ResourceManager.GetString("app_razor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///	&quot;Auth0&quot;:{
        ///		&quot;Domain&quot;: &quot;[Your_Auth0_Tenant_Domain]&quot;,
        ///		&quot;ClientId&quot;: &quot;[Your_Auth0_Client/Application_Id]&quot;,
        ///		&quot;ClientSecret&quot;: &quot;[Your_Auth0_Client/Application_Secret]&quot;,
        ///		&quot;Audience&quot;: &quot;[Your_Auth0_Audience/API_Identifier]&quot;
        ///	}
        ///}.
        /// </summary>
        internal static string appsettings_json {
            get {
                return ResourceManager.GetString("appsettings_json", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to @inherits LayoutComponentBase
        ///
        ///&lt;Router AppAssembly=&quot;typeof(Startup).Assembly&quot;&gt;
        ///    &lt;NotFoundContent&gt;
        ///        &lt;p&gt;Sorry, there&apos;s nothing at this address.&lt;/p&gt;
        ///    &lt;/NotFoundContent&gt;
        ///    &lt;NotAuthorizedContent&gt;
        ///        &lt;h1&gt;Sorry&lt;/h1&gt;
        ///        &lt;p&gt;You&apos;re not authorized to reach this page. You may need to log in as a different user.&lt;/p&gt;
        ///    &lt;/NotAuthorizedContent&gt;
        ///    &lt;AuthorizingContent&gt;
        ///        &lt;p&gt;Please wait...&lt;/p&gt;
        ///    &lt;/AuthorizingContent&gt;
        ///&lt;/Router&gt;.
        /// </summary>
        internal static string shell_razor {
            get {
                return ResourceManager.GetString("shell_razor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to // Import Blazor.Auth0
        ///using Blazor.Auth0;
        ///using Blazor.Auth0.Models;
        ///// ...
        ///
        ///public void ConfigureServices(IServiceCollection services)
        ///{
        ///	// Other code...
        ///
        ///	/// This one-liner will initialize Blazor.Auth0 with all the defaults
        ///	services.AddDefaultBlazorAuth0Authentication(Configuration.GetSection(&quot;Auth0&quot;).Get&lt;ClientOptions&gt;());	
        ///
        ///	// Other code...
        ///}
        ///
        ///public void Configure(IApplicationBuilder app, IWebHostEnvironment env)
        ///{
        ///	// Otrher code...
        ///
        ///	app.UseHttpsRedirection();
        ///	app.UseStaticF [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string startup_cs {
            get {
                return ResourceManager.GetString("startup_cs", resourceCulture);
            }
        }
    }
}
